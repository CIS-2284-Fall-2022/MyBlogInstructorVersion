@page "/"
@using MyBlog.Data.Interfaces
@using MyBlog.Data.Models
@using MyBlog.Data.Repos
@inject IBlogPostRepo repo

<PageTitle>Index</PageTitle>
<button @onclick="AddSomePosts">Add some fake posts</button>

<br />
<br />

<ul>
   <Virtualize ItemsProvider="LoadPosts" Context="p">
        <li><a href="/Post/@p.Id">@p.Title</a></li>
   </Virtualize>
</ul>
@code{
    protected async Task AddSomePosts()
    {
        for (int i=1; i<10; i++)
        {
            await repo.SaveBlogPostAsync(new BlogPost()
                {
                    PublishDate = DateTime.Now,
                    Title = $"Blog post {i}",
                    Text = "Text"
                });
        }
    }

    protected List<BlogPost> posts = new List<BlogPost>();

    public int totalBlogposts { get; set; }

    private async ValueTask<ItemsProviderResult<BlogPost>> LoadPosts(ItemsProviderRequest request)
    {
        if(totalBlogposts == 0)
        {
            totalBlogposts = await repo.GetBlogPostCountAsync();
        }
        var numblogposts = Math.Min(request.Count, totalBlogposts - request.StartIndex);
        var posts = await repo.GetBlogPostsAsync(numblogposts, request.StartIndex);
        return new ItemsProviderResult<BlogPost>(posts, totalBlogposts);
    }
    

}


